diff --git a/node_modules/react-native-gifted-chat/lib/GiftedChat.d.ts b/node_modules/react-native-gifted-chat/lib/GiftedChat.d.ts
index 0444a70..369cdc4 100644
--- a/node_modules/react-native-gifted-chat/lib/GiftedChat.d.ts
+++ b/node_modules/react-native-gifted-chat/lib/GiftedChat.d.ts
@@ -142,6 +142,7 @@ declare namespace GiftedChat {
         showUserAvatar: PropTypes.Requireable<boolean>;
         actionSheet: PropTypes.Requireable<(...args: any[]) => any>;
         onPressAvatar: PropTypes.Requireable<(...args: any[]) => any>;
+        onPressUrl: PropTypes.Requireable<(...args: any[]) => any>;
         onLongPressAvatar: PropTypes.Requireable<(...args: any[]) => any>;
         renderUsernameOnMessage: PropTypes.Requireable<boolean>;
         renderAvatarOnTop: PropTypes.Requireable<boolean>;
diff --git a/node_modules/react-native-gifted-chat/lib/GiftedChat.js b/node_modules/react-native-gifted-chat/lib/GiftedChat.js
index 9951cd8..8c4e6a5 100644
--- a/node_modules/react-native-gifted-chat/lib/GiftedChat.js
+++ b/node_modules/react-native-gifted-chat/lib/GiftedChat.js
@@ -378,6 +378,7 @@ GiftedChat.propTypes = {
     showUserAvatar: PropTypes.bool,
     actionSheet: PropTypes.func,
     onPressAvatar: PropTypes.func,
+    onPressUrl: PropTypes.func,
     onLongPressAvatar: PropTypes.func,
     renderUsernameOnMessage: PropTypes.bool,
     renderAvatarOnTop: PropTypes.bool,
diff --git a/node_modules/react-native-gifted-chat/lib/InputToolbar.js b/node_modules/react-native-gifted-chat/lib/InputToolbar.js
index 2ff651d..ccdc890 100644
--- a/node_modules/react-native-gifted-chat/lib/InputToolbar.js
+++ b/node_modules/react-native-gifted-chat/lib/InputToolbar.js
@@ -25,6 +25,7 @@ const styles = StyleSheet.create({
 });
 export function InputToolbar(props) {
     const [position, setPosition] = useState('absolute');
+
     useEffect(() => {
         const keyboardWillShowListener = Keyboard.addListener('keyboardWillShow', () => setPosition('relative'));
         const keyboardWillHideListener = Keyboard.addListener('keyboardWillHide', () => setPosition('absolute'));
@@ -35,17 +36,25 @@ export function InputToolbar(props) {
     }, []);
     const { containerStyle, ...rest } = props;
     const { renderActions, onPressActionButton, renderComposer, renderSend, renderAccessory, } = rest;
-    return (<View style={[styles.container, { position }, containerStyle]}>
-      <View style={[styles.primary, props.primaryStyle]}>
-        {(renderActions === null || renderActions === void 0 ? void 0 : renderActions(rest)) ||
-            (onPressActionButton && <Actions {...rest}/>)}
-        {(renderComposer === null || renderComposer === void 0 ? void 0 : renderComposer(props)) || <Composer {...props}/>}
-        {(renderSend === null || renderSend === void 0 ? void 0 : renderSend(props)) || <Send {...props}/>}
-      </View>
-      {renderAccessory && (<View style={[styles.accessory, props.accessoryStyle]}>
-          {renderAccessory(props)}
-        </View>)}
-    </View>);
+    return (
+    <>
+        {renderAccessory &&
+            (
+                <View style={[styles.accessory, props.accessoryStyle]}>
+                       {renderAccessory(props)}
+                </View>
+            )
+        }
+        <View style={[styles.container, { position }, containerStyle]}>
+          <View style={[styles.primary, props.primaryStyle]}>
+            {(renderActions === null || renderActions === void 0 ? void 0 : renderActions(rest)) ||
+                (onPressActionButton && <Actions {...rest}/>)}
+            {(renderComposer === null || renderComposer === void 0 ? void 0 : renderComposer(props)) || <Composer {...props}/>}
+            {(renderSend === null || renderSend === void 0 ? void 0 : renderSend(props)) || <Send {...props}/>}
+          </View>
+        </View>
+    </>
+    );
 }
 InputToolbar.propTypes = {
     renderAccessory: PropTypes.func,
diff --git a/node_modules/react-native-gifted-chat/lib/MessageText.js b/node_modules/react-native-gifted-chat/lib/MessageText.js
index dd834d6..ec55874 100644
--- a/node_modules/react-native-gifted-chat/lib/MessageText.js
+++ b/node_modules/react-native-gifted-chat/lib/MessageText.js
@@ -42,7 +42,7 @@ const styles = {
     }),
 };
 const DEFAULT_OPTION_TITLES = ['Call', 'Text', 'Cancel'];
-export function MessageText({ currentMessage = {}, optionTitles = DEFAULT_OPTION_TITLES, position = 'left', containerStyle, textStyle, linkStyle: linkStyleProp, customTextStyle, parsePatterns = () => [], textProps, }) {
+export function MessageText({ currentMessage = {}, optionTitles = DEFAULT_OPTION_TITLES, position = 'left', containerStyle, textStyle, linkStyle: linkStyleProp, customTextStyle, parsePatterns = () => [], textProps,onPressUrl }) {
     const { actionSheet } = useChatContext();
     // TODO: React.memo
     // const shouldComponentUpdate = (nextProps: MessageTextProps<TMessage>) => {
@@ -53,6 +53,10 @@ export function MessageText({ currentMessage = {}, optionTitles = DEFAULT_OPTION
     //   )
     // }
     const onUrlPress = (url) => {
+        if(onPressUrl){
+            onPressUrl(url)
+            return
+        }
         // When someone sends a message that includes a website address beginning with "www." (omitting the scheme),
         // react-native-parsed-text recognizes it as a valid url, but Linking fails to open due to the missing scheme.
         if (WWW_URL_PATTERN.test(url)) {
